#ifndef CONVERT_HPP
#define CONVERT_HPP
enum basic_commands
{
    COMPILED_START_SYMBOL=1,
    COMPILED_FUNCTION_EXPORT,
    COMPILER_FUNCTION_IMPORT,
    COMPILER_IF,
    COMPILER_ELSE,
    COMPILER_ELIF,
    COMPILER_SET,
    COMPILER_ADD,
    COMPILER_SUBTRACT,
    COMPILER_MULTIPLE,
    COMPILER_DIVIDE,
    COMPILER_MODULE,
    COMPILER_IMPORT,
    COMPILER_WASTE_DATA_START,
    COMPILER_WASTE_DATA_END,
    COMPILER_DEF_VARIABLE,
    COMPILER_DEF_ARRAY,
    COMPILER_DEF_FUNCTION,
    COMPILER_GOTO,
    COMPILER_TAG,
    COMPILER_CALL,
    COMPILER_VARTYPE_INT,
    COMPILER_VARTYPE_SHORT,
    COMPILER_VARTYPE_LONG,
    COMPILER_MODIFIER_UNSIGNED,
    COMPILER_MODIFIER_SIGNED,
    COMPILER_MODIFIER_GLOBAL,
    COMPILER_MODIFIER_LOCAL,
    COMPILER_MODIFIER_PUBLIC,
    COMPILER_MODIFIER_PRIVATE,
    COMPILER_TYPECAST,
    COMPILER_EXIT
};
void TranslateCompiledCommand(const wchar_t *src_command,wchar_t *buffer)
{

}
#endif